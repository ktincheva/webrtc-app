# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := mediasoup-worker
DEFS_Debug := \
	'-D_POSIX_C_SOURCE=200112' \
	'-D_GNU_SOURCE' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DHAVE_INT16_T' \
	'-DHAVE_INT32_T' \
	'-DHAVE_INT8_T' \
	'-DHAVE_UINT16_T' \
	'-DHAVE_UINT32_T' \
	'-DHAVE_UINT64_T' \
	'-DHAVE_UINT8_T' \
	'-DHAVE_STDINT_H' \
	'-DHAVE_INTTYPES_H' \
	'-DHAVE_NETINET_IN_H' \
	'-DCPU_CISC' \
	'-D MS_DEVEL' \
	'-DDEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-m64 \
	-std=c++11 \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-g \
	-O0 \
	-fwrapv \
	-Wno-parentheses-equality

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug :=

INCS_Debug := \
	-I$(srcdir)/include \
	-I$(srcdir)/deps/jsoncpp/jsoncpp/bundled \
	-I$(srcdir)/deps/netstring/netstring-c \
	-I$(srcdir)/deps/libuv/include \
	-I$(srcdir)/deps/openssl/openssl/include \
	-I$(srcdir)/deps/libsrtp/srtp/include

DEFS_Release := \
	'-D_POSIX_C_SOURCE=200112' \
	'-D_GNU_SOURCE' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DHAVE_INT16_T' \
	'-DHAVE_INT32_T' \
	'-DHAVE_INT8_T' \
	'-DHAVE_UINT16_T' \
	'-DHAVE_UINT32_T' \
	'-DHAVE_UINT64_T' \
	'-DHAVE_UINT8_T' \
	'-DHAVE_STDINT_H' \
	'-DHAVE_INTTYPES_H' \
	'-DHAVE_NETINET_IN_H' \
	'-DCPU_CISC'

# Flags passed to all source files.
CFLAGS_Release := \
	-m64 \
	-std=c++11 \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-g

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release :=

INCS_Release := \
	-I$(srcdir)/include \
	-I$(srcdir)/deps/jsoncpp/jsoncpp/bundled \
	-I$(srcdir)/deps/netstring/netstring-c \
	-I$(srcdir)/deps/libuv/include \
	-I$(srcdir)/deps/openssl/openssl/include \
	-I$(srcdir)/deps/libsrtp/srtp/include

OBJS := \
	$(obj).target/$(TARGET)/src/DepLibSRTP.o \
	$(obj).target/$(TARGET)/src/DepLibUV.o \
	$(obj).target/$(TARGET)/src/DepOpenSSL.o \
	$(obj).target/$(TARGET)/src/DepUsrSCTP.o \
	$(obj).target/$(TARGET)/src/Logger.o \
	$(obj).target/$(TARGET)/src/Loop.o \
	$(obj).target/$(TARGET)/src/Settings.o \
	$(obj).target/$(TARGET)/src/main.o \
	$(obj).target/$(TARGET)/src/Channel/Notifier.o \
	$(obj).target/$(TARGET)/src/Channel/Request.o \
	$(obj).target/$(TARGET)/src/Channel/UnixStreamSocket.o \
	$(obj).target/$(TARGET)/src/RTC/CodecManager.o \
	$(obj).target/$(TARGET)/src/RTC/DtlsTransport.o \
	$(obj).target/$(TARGET)/src/RTC/IceCandidate.o \
	$(obj).target/$(TARGET)/src/RTC/IceServer.o \
	$(obj).target/$(TARGET)/src/RTC/Peer.o \
	$(obj).target/$(TARGET)/src/RTC/Room.o \
	$(obj).target/$(TARGET)/src/RTC/RtcpPacket.o \
	$(obj).target/$(TARGET)/src/RTC/RtpListener.o \
	$(obj).target/$(TARGET)/src/RTC/RtpPacket.o \
	$(obj).target/$(TARGET)/src/RTC/RtpReceiver.o \
	$(obj).target/$(TARGET)/src/RTC/RtpSender.o \
	$(obj).target/$(TARGET)/src/RTC/SrtpSession.o \
	$(obj).target/$(TARGET)/src/RTC/StunMessage.o \
	$(obj).target/$(TARGET)/src/RTC/TcpConnection.o \
	$(obj).target/$(TARGET)/src/RTC/TcpServer.o \
	$(obj).target/$(TARGET)/src/RTC/Transport.o \
	$(obj).target/$(TARGET)/src/RTC/TransportTuple.o \
	$(obj).target/$(TARGET)/src/RTC/UdpSocket.o \
	$(obj).target/$(TARGET)/src/RTC/RtpParameters/CustomParameterValue.o \
	$(obj).target/$(TARGET)/src/RTC/RtpParameters/RtcpFeedback.o \
	$(obj).target/$(TARGET)/src/RTC/RtpParameters/RtcpParameters.o \
	$(obj).target/$(TARGET)/src/RTC/RtpParameters/RtpCodecParameters.o \
	$(obj).target/$(TARGET)/src/RTC/RtpParameters/RtpEncodingParameters.o \
	$(obj).target/$(TARGET)/src/RTC/RtpParameters/RtpFecParameters.o \
	$(obj).target/$(TARGET)/src/RTC/RtpParameters/RtpHeaderExtensionParameters.o \
	$(obj).target/$(TARGET)/src/RTC/RtpParameters/RtpParameters.o \
	$(obj).target/$(TARGET)/src/RTC/RtpParameters/RtpRtxParameters.o \
	$(obj).target/$(TARGET)/src/Utils/Crypto.o \
	$(obj).target/$(TARGET)/src/Utils/File.o \
	$(obj).target/$(TARGET)/src/Utils/IP.o \
	$(obj).target/$(TARGET)/src/handles/SignalsHandler.o \
	$(obj).target/$(TARGET)/src/handles/TcpConnection.o \
	$(obj).target/$(TARGET)/src/handles/TcpServer.o \
	$(obj).target/$(TARGET)/src/handles/Timer.o \
	$(obj).target/$(TARGET)/src/handles/UdpSocket.o \
	$(obj).target/$(TARGET)/src/handles/UnixStreamSocket.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/libjsoncpp.a $(builddir)/libnetstring.a $(builddir)/libuv.a $(builddir)/libopenssl.a $(builddir)/libsrtp.a $(obj).target/deps/jsoncpp/libjsoncpp.a $(obj).target/deps/netstring/libnetstring.a $(obj).target/deps/libuv/libuv.a $(obj).target/deps/openssl/libopenssl.a $(obj).target/deps/libsrtp/libsrtp.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-m64 \
	-Wl,--whole-archive $(builddir)/libopenssl.a -Wl,--no-whole-archive \
	-pthread

LDFLAGS_Release := \
	-m64 \
	-Wl,--whole-archive $(builddir)/libopenssl.a -Wl,--no-whole-archive \
	-pthread

LIBS := \
	-lm \
	-ldl \
	-lrt

$(builddir)/mediasoup-worker: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/mediasoup-worker: LIBS := $(LIBS)
$(builddir)/mediasoup-worker: LD_INPUTS := $(OBJS) $(obj).target/deps/jsoncpp/libjsoncpp.a $(obj).target/deps/netstring/libnetstring.a $(obj).target/deps/libuv/libuv.a $(obj).target/deps/openssl/libopenssl.a $(obj).target/deps/libsrtp/libsrtp.a
$(builddir)/mediasoup-worker: TOOLSET := $(TOOLSET)
$(builddir)/mediasoup-worker: $(OBJS) $(obj).target/deps/jsoncpp/libjsoncpp.a $(obj).target/deps/netstring/libnetstring.a $(obj).target/deps/libuv/libuv.a $(obj).target/deps/openssl/libopenssl.a $(obj).target/deps/libsrtp/libsrtp.a FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/mediasoup-worker
# Add target alias
.PHONY: mediasoup-worker
mediasoup-worker: $(builddir)/mediasoup-worker

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/mediasoup-worker

